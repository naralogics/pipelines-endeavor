repos:

- repo: https://github.com/psf/black
  rev: "22.3.0"
  hooks:
    - id: black
      args: ['--config', 'pyproject.toml']

- repo: https://github.com/PyCQA/flake8
  rev: "3.9.2"
  hooks:
    - id: flake8
      exclude: setup.py

- repo: https://github.com/pre-commit/mirrors-isort
  rev: "v5.9.1"
  hooks:
    - id: isort

- repo: https://github.com/pycqa/pylint
  rev: "v2.8.3"
  hooks:
    - id: pylint
      additional_dependencies: [pylint_venv]
      stages: [push]

      # The entry below does something subtle in order to run `pylint` on the project code,
      # when both are on different virtual environments. `pylint` is in an isolated virtualenv
      # set up by `pre-commit`, and our project code is in a separate virtualenv managed by Pipenv.
      # `pylint` needs to load the project virtualenv so it can resolve modules from our project
      # for static analysis.
      # So, we use `bash` as an escape hatch from pre-commit's embrace, we "punch out" to `pipenv`
      # to exfiltrate the project virtualenv location, and set it as the `VIRTUAL_ENV` env variable
      # for `pylint` to notice. Within pylint, we use an `init-hook` (see.pylintrc) and the
      # `pylint_venv` plugin (which we add as an additional dependency above) so that `pylint`
      # automatically activates the project virtualenv.
      entry: >
        bash -c
        'env VIRTUAL_ENV="$(${PIP_PYTHON_PATH} -m pipenv --venv)" pylint "$@"'
        --

      args: ['--rcfile', '.pylintrc', '-sn', './pipelines/cereal_example_tests']
      pass_filenames: false

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
    - id: trailing-whitespace
    - id: end-of-file-fixer

- repo: local
  hooks:
    - id: pytest
      name: pytest
      stages: [push]
      language: system
      entry: pipenv run pytest
      args: ['./pipelines/cereal_example_tests']
      pass_filenames: false

    - id: pytest-cov
      name: pytest
      stages: [manual]
      language: system
      entry: pipenv run pytest --cov
      pass_filenames: false

default_language_version:
  python: python3.10
